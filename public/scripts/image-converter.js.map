{
  "version": 3,
  "sources": ["../../scripts/image-converter/index.ts", "../../scripts/image-converter/extension.ts", "../../scripts/image-converter/file.ts"],
  "sourcesContent": ["import { getElement } from \"../share/element.js\";\nimport { state$ } from \"../share/state$.js\";\nimport { handleSelectFrom, handleSelectTo, switchExtension } from \"./extension.js\";\nimport { attachPreview, convertFile, handleUpload } from \"./file.js\";\n\nexport type ImgType = \"png\" | \"webp\" | \"jpeg\";\n\nconst fileInput = getElement<HTMLInputElement>(\"#file-input\");\nconst preview = getElement<HTMLImageElement>(\"img\");\nconst file$ = state$<File | null>(null);\nfileInput.addEventListener(\"change\", handleUpload(fileInput, file$));\n\nconst extensions$ = state$<{ from: ImgType; to: ImgType }>({ from: \"png\", to: \"webp\" });\nfile$.addEffect((file) => attachPreview(file, preview, extensions$));\n\nconst selectFrom = getElement(\"#from\");\nconst selectTo = getElement(\"#to\");\nconst optionsFrom = selectFrom.querySelectorAll(\"option\");\nconst optionsTo = selectTo.querySelectorAll(\"option\");\nif (!(selectFrom instanceof HTMLSelectElement)) throw new Error(\"from is not a select\");\nif (!(selectTo instanceof HTMLSelectElement)) throw new Error(\"to is not a select\");\nselectFrom.addEventListener(\"change\", handleSelectFrom(selectFrom, extensions$));\nselectTo.addEventListener(\"change\", handleSelectTo(selectTo, extensions$));\n\nconst switchBtn = getElement<HTMLButtonElement>(\"#switch\");\nswitchBtn.addEventListener(\"click\", () => switchExtension(extensions$));\nextensions$.addEffect((extension) => {\n\tconst ex = extension.from;\n\tfileInput.value = \"\";\n\tfileInput.accept = `image/${ex}`;\n\tfile$.set = null;\n\toptionsFrom.forEach((option) => {\n\t\toption.selected = option.value === extension.from;\n\t});\n\toptionsTo.forEach((option) => {\n\t\toption.selected = option.value === extension.to;\n\t});\n});\n\nconst convertBtn = getElement<HTMLButtonElement>(\"#convert-btn\");\nfile$.addEffect((file) => {\n\tconvertBtn.disabled = file === null;\n});\n\nconvertBtn.addEventListener(\"click\", async () => {\n\tconst file = file$.get;\n\tif (file === null) return;\n\tconst ex = extensions$.get.to;\n\tconst names = file.name.split(\".\");\n\tconst name =\n\t\tnames.length > 1 ? `${names.slice(0, names.length - 1).join()}.${ex}` : `${file.name}.${ex}`;\n\tconst url = await convertFile(file, ex);\n\tconst a = document.createElement(\"a\");\n\ta.href = url;\n\ta.download = name;\n\ta.click();\n});\n", "import { ImgType } from \".\";\nimport { State$ } from \"../share/state$\";\n\nexport function switchExtension(extensions$: State$<{ from: ImgType; to: ImgType }>) {\n\textensions$.setter((old) => {\n\t\t[old.from, old.to] = [old.to, old.from];\n\t\treturn old;\n\t});\n}\n\nexport function handleSelectFrom(\n\tselect: HTMLSelectElement,\n\textensions$: State$<{ from: ImgType; to: ImgType }>\n) {\n\treturn function () {\n\t\tconst value = select.value;\n\t\tif (!check(value)) return;\n\t\tlet to = extensions$.get.to;\n\t\tif (extensions$.get.to === value) {\n\t\t\tto = extensions$.get.from;\n\t\t}\n\t\textensions$.set = { from: value, to };\n\t};\n}\n\nexport function handleSelectTo(\n\tselect: HTMLSelectElement,\n\textensions$: State$<{ from: ImgType; to: ImgType }>\n) {\n\treturn function () {\n\t\tconst value = select.value;\n\t\tif (!check(value)) return;\n\t\tlet from = extensions$.get.from;\n\t\tif (extensions$.get.from === value) {\n\t\t\tfrom = extensions$.get.to;\n\t\t}\n\t\textensions$.set = { from, to: value };\n\t};\n}\n\nfunction check(v: string): v is ImgType {\n\treturn v === \"png\" || v === \"webp\" || v === \"jpeg\";\n}\n", "import { State$ } from \"../share/state$.js\";\nimport { ImgType } from \"./index.js\";\n\nexport function handleUpload(input: HTMLInputElement, file$: State$<File | null>) {\n\treturn async function () {\n\t\tconst files = input.files;\n\n\t\tif (files === null || files.length === 0) {\n\t\t\tfile$.set = null;\n\t\t\treturn;\n\t\t}\n\t\tfile$.set = files[0];\n\t};\n}\nexport async function attachPreview(\n\tfile: File | null,\n\timg: HTMLImageElement,\n\textensions$: State$<{ from: ImgType; to: ImgType }>\n) {\n\tif (file === null) {\n\t\timg.src = \"\";\n\t\timg.hidden = true;\n\t\treturn;\n\t}\n\tconst url = await convertFile(file, extensions$.get.to);\n\timg.src = url;\n\timg.hidden = false;\n}\n\nexport const convertFile = async (file: File, toEx: ImgType): Promise<string> => {\n\t// Create an image element\n\tconst img = new Image();\n\t// Create canvas\n\tconst canvas = document.createElement(\"canvas\");\n\tconst ctx = canvas.getContext(\"2d\");\n\n\tif (!ctx) {\n\t\tthrow new Error(\"Could not get canvas context\");\n\t}\n\n\t// Create a promise to handle image loading\n\treturn new Promise((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\t// Set canvas dimensions to match image\n\t\t\tcanvas.width = img.width;\n\t\t\tcanvas.height = img.height;\n\n\t\t\t// Draw image onto canvas\n\t\t\tctx.drawImage(img, 0, 0);\n\n\t\t\ttry {\n\t\t\t\tconst url = canvas.toDataURL(`image/${toEx}`, 0.85); // 0.85 quality\n\t\t\t\tresolve(url);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t};\n\n\t\timg.onerror = () => {\n\t\t\treject(new Error(\"Failed to load image\"));\n\t\t};\n\n\t\t// Load the image\n\t\timg.src = URL.createObjectURL(file);\n\t});\n};\n"],
  "mappings": "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",
  "names": ["extensions$", "file$", "extensions$"]
}
