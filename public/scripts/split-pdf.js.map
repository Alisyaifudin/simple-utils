{
  "version": 3,
  "sources": ["../../scripts/split-pdf/index.ts", "../../scripts/split-pdf/pdf.ts", "../../scripts/split-pdf/read-pages.ts", "../../scripts/split-pdf/submit.ts", "../../scripts/split-pdf/parse-pages.ts"],
  "sourcesContent": ["import { elem$ } from \"../share/elem$.js\";\nimport { getElement } from \"../share/element.js\";\nimport { state$ } from \"../share/state$.js\";\nimport { PDF } from \"./pdf.js\";\nimport { attachPageNumber, handlePDFUpload } from \"./read-pages.js\";\nimport { handleSubmit } from \"./submit.js\";\n\nconst pdfInput = getElement<HTMLInputElement>(\"#pdf-input\");\nconst file = state$<PDF | null>(null);\nconst pageNumber = elem$(getElement<HTMLParagraphElement>(\"#pdf-page\"));\nconst form = getElement<HTMLFormElement>(\"form\");\n\npdfInput.addEventListener(\"change\", handlePDFUpload(pdfInput, file));\nattachPageNumber(pageNumber, file);\nform.addEventListener(\"submit\", handleSubmit(form, file));\n", "import { PDFDocument } from \"../share/pdfjs.js\";\nimport { err, ok, Result } from \"../share/utils.js\";\n\nexport class PDF {\n\tprivate _document: PDFDocument | null = null;\n\tconstructor(public file: File) {\n\t\tthis.document();\n\t}\n\tasync document() {\n\t\tif (this._document) return this._document;\n\t\tconst arrayBuffer = await this.file.arrayBuffer();\n\t\tconst doc = await PDFDocument.load(arrayBuffer);\n\t\tthis._document = doc;\n\t\treturn doc;\n\t}\n\tasync count() {\n\t\tconst doc = await this.document();\n\t\treturn doc.getPageCount();\n\t}\n\tasync split(pages: [number, number]): Promise<Result<string, Blob>> {\n\t\tconst [from, to] = pages;\n\t\tconst original = await this.document();\n\t\tconst total = original.getPageCount();\n\t\tif (from < 1 || from > total || from >= to) {\n\t\t\treturn err(`Invalid page range: ${from}-${to}. PDF has ${total} pages.`);\n\t\t}\n\t\tconst newDoc = await PDFDocument.create();\n\n\t\tconst pageIndices = Array.from({ length: to - from }).map((_, i) => from - 1 + i);\n\t\tconst copiedPages = await newDoc.copyPages(original, pageIndices);\n\t\tcopiedPages.forEach((page) => newDoc.addPage(page));\n\t\tconst pdfBytes = await newDoc.save();\n\t\tconst blob = new Blob([pdfBytes as any], { type: \"application/pdf\" });\n\t\treturn ok(blob);\n\t}\n}\n", "import { Elem$ } from \"../share/elem$.js\";\nimport { State$ } from \"../share/state$.js\";\nimport { PDF } from \"./pdf.js\";\n\nexport function handlePDFUpload(pdfInput: HTMLInputElement, pdf: State$<PDF | null>) {\n\treturn async function () {\n\t\tconst files = pdfInput.files;\n\n\t\tif (files === null || files.length === 0) {\n\t\t\tpdf.set = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst file = files[0];\n\n\t\tconst p = new PDF(file);\n\t\tpdf.set = p;\n\t};\n}\n\nexport function attachPageNumber(pageNumber: Elem$<HTMLParagraphElement>, pdf: State$<PDF | null>) {\n\tpdf.addEffect(async (pdf) => {\n\t\tif (pdf === null) return;\n\t\tconst file = pdf.file;\n\t\t// Validate file type\n\t\tif (file.type !== \"application/pdf\") {\n\t\t\tpageNumber.set((old) => {\n\t\t\t\told.textContent = \"Please select a valid PDF file.\";\n\t\t\t\told.className = \"text-red-500\";\n\t\t\t\treturn old;\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tpageNumber.set((old) => {\n\t\t\t\told.textContent = \"Reading PDF...\";\n\t\t\t\told.className = \"\";\n\t\t\t\treturn old;\n\t\t\t});\n\n\t\t\tconst numPages = await pdf.count();\n\n\t\t\tpageNumber.set((old) => {\n\t\t\t\told.textContent = `PDF has ${numPages} page${numPages !== 1 ? \"s\" : \"\"}`;\n\t\t\t\told.className = \"\";\n\t\t\t\treturn old;\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"PDF processing error:\", error);\n\t\t\tpageNumber.set((old) => {\n\t\t\t\told.textContent = \"Error reading PDF. File may be corrupted or encrypted.\";\n\t\t\t\told.className = \"text-red-500\";\n\t\t\t\treturn old;\n\t\t\t});\n\t\t}\n\t});\n}\n", "import { getElement } from \"../share/element.js\";\nimport { State$ } from \"../share/state$.js\";\nimport { parsePages } from \"./parse-pages.js\";\nimport { PDF } from \"./pdf.js\";\n\nexport function handleSubmit(form: HTMLFormElement, pdf: State$<PDF | null>) {\n\tconst p = getElement<HTMLParagraphElement>(\"#pdf-status\");\n\treturn async function (e: SubmitEvent) {\n\t\te.preventDefault();\n\t\tif (pdf.get === null) return;\n\t\tconst formdata = new FormData(form);\n\t\tconst pagesStr = formdata.get(\"pages\");\n\t\tconst total = await pdf.get.count();\n\t\tif (!isString(pagesStr)) return;\n\t\tconst [errMsg, pages] = parsePages(pagesStr, total);\n\t\tif (errMsg !== null) {\n\t\t\tp.textContent = errMsg;\n\t\t\treturn;\n\t\t}\n\t\tp.textContent = \"\";\n\n\t\tconst ul = getElement<HTMLUListElement>(\"#results\");\n\t\tul.innerHTML = \"\";\n\t\tconst filenames = pdf.get.file.name.split(\".\");\n\t\tconst filename = filenames.slice(0, filenames.length - 1);\n\t\tfor (const [from, to] of pages) {\n\t\t\tconst [li, a] = createLi(ul);\n\t\t\tli.textContent = \"Loading...\";\n\t\t\tpdf.get.split([from, to]).then(([errMsg, blob]) => {\n\t\t\t\tif (errMsg !== null) {\n\t\t\t\t\tli.textContent = errMsg;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst url = URL.createObjectURL(blob);\n\t\t\t\ta.href = url;\n\t\t\t\tconst name =\n\t\t\t\t\tto === from + 1 ? `${filename}-${from}.pdf` : `${filename}-${from}-${to - 1}.pdf`;\n\t\t\t\ta.download = a.textContent = name;\n\t\t\t\tli.innerHTML = \"\";\n\t\t\t\tli.appendChild(a);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction isString(v: unknown): v is string {\n\treturn typeof v === \"string\";\n}\n\nfunction createLi(ul: HTMLUListElement) {\n\tconst li = document.createElement(\"li\");\n\tconst a = document.createElement(\"a\");\n\tul.appendChild(li);\n\treturn [li, a] as const;\n}\n", "import { err, ok, type Result } from \"../share/utils.js\";\n\nexport function parsePages(value: string, total: number): Result<string, [number, number][]> {\n\tconst pages: [number, number][] = [];\n\tconst chunks = value.split(\",\");\n\tfor (const chunk of chunks) {\n\t\tconst num = Number(chunk);\n\t\tif (!isNaN(num)) {\n\t\t\tif (!Number.isInteger(num)) return err(\"Must be integer\");\n\t\t\tif (num < 1) return err(\"Must be greater than 0\");\n\t\t\tif (num > total) return err(\"Cannot greater than the total page\");\n\t\t\tpages.push([num, num + 1]);\n\t\t\tcontinue;\n\t\t}\n\t\tconst ranges = chunk.split(\"-\");\n\t\tif (ranges.length !== 2) {\n\t\t\treturn err(\"Invalid input\");\n\t\t}\n\t\tconst [n1, n2] = ranges.map(Number);\n\t\tif (isNaN(n1) || isNaN(n2)) {\n\t\t\treturn err(\"Not a number\");\n\t\t}\n\t\tif (n2 <= n1) {\n\t\t\treturn err(\"Second number must be greater\");\n\t\t}\n\t\tif (n1 > total) return err(\"Cannot greater than the total page\");\n\t\tif (!Number.isInteger(n1) || !Number.isInteger(n2)) return err(\"Must be integer\");\n\t\tconst upper = n2 > total ? total + 1 : n2;\n\t\tpages.push([n1, upper]);\n\t}\n\treturn ok(pages);\n}\n"],
  "mappings": "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",
  "names": ["getElement", "file", "pdfInput", "file", "pageNumber", "pdf", "err", "ok", "form", "errMsg", "getElement"]
}
